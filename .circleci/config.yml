version: 2.1
commands:
  build:
    description: "Perform build steps"
    parameters:
      base_dir:
        type: string
        
    steps:
      - restore_cache:
          key: << parameters.base_dir >>-{{ checksum "<< parameters.base_dir >>/build.gradle" }}
      - run: 
          name: << parameters.base_dir >> Building and UnitTesting
          command: cd << parameters.base_dir >> && ./gradlew build --info
      - run: 
          name: << parameters.base_dir >> Sonar
          command: cd << parameters.base_dir >> && ./gradlew sonarqube -Dsonar.projectKey=pradyb_<< parameters.base_dir >> -Dsonar.organization=pradyb -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_LOGIN_TOKEN 
      - save_cache: 
                paths:
                  - .gradle
                key: << parameters.base_dir >>-{{ checksum "<< parameters.base_dir >>/build.gradle" }}
      - run:
          name: << parameters.base_dir >> Save test results
          command: |
            mkdir -p ~/poc-space/<< parameters.base_dir >>/test-results/junit/
            cd << parameters.base_dir >>
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/poc-space/<< parameters.base_dir >>/test-results/junit/ \;
          when: always
      - store_test_results: 
          path: ~/poc-space/<< parameters.base_dir >>/test-results
      - store_artifacts: 
          path: ~/poc-space/<< parameters.base_dir >>/test-results/junit
      - store_artifacts: 
          path: << parameters.base_dir >>/build/jacoco
      - store_artifacts: 
          path: << parameters.base_dir >>/build/reports
jobs: 
  all: 
    working_directory: ~/poc-space

    docker: 
      - image: circleci/openjdk:11-jdk

    steps: 
      - checkout
      - build:
          base_dir: "reactive-demo"
      - build:
          base_dir: "spring-tx-demo"

workflows:
  version: 2
  all:
    jobs:
      - all